<style>
    /* General Styles */
    body {
        font-family: 'Roboto', sans-serif;
        font-size: 16px;
        line-height: 1.6;
        background-color: #f4f7fc;
        background-image: linear-gradient(to right, #f4f7fc, #e8eff9);
        margin: 0;
        padding: 0;
        min-height: 100vh;
        color: #333;
    }

    /* Navbar Styling */
    .navbar {
        background-color: #1f2937;
        color: #fff;
        padding: 1rem 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .navbar h1 {
        margin: 0;
        font-size: 1.8rem;
        font-weight: 500;
    }

    .logout-btn {
        background-color: #ff6b6b;
        color: white;
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 30px;
        cursor: pointer;
        font-weight: 600;
        text-transform: uppercase;
        transition: background-color 0.3s ease;
    }

    .logout-btn:hover {
        background-color: #e05656;
    }

    /* Dashboard Container */
    .dashboard-container {
        padding: 2rem;
        max-width: 1200px;
        margin: 3rem auto;
        background-color: #ffffff;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }

    .dashboard-container h2 {
        margin-bottom: 1rem;
        font-size: 2rem;
        font-weight: 500;
        color: #1f2937;
    }

    /* Table Controls */
    .table-controls {
        margin-bottom: 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .table-controls button {
        background-color: #3b82f6;
        color: white;
        border: none;
        border-radius: 30px;
        padding: 0.75rem 1.5rem;
        cursor: pointer;
        font-weight: 600;
        text-transform: uppercase;
        transition: background-color 0.3s ease;
    }

    .table-controls button:hover {
        background-color: #2563eb;
    }

    .table-controls input[type="text"] {
        padding: 0.75rem 1rem;
        border: 1px solid #ddd;
        border-radius: 8px;
        font-size: 1rem;
        width: 250px;
    }

    /* User Table */
    .user-table {
        width: 100%;
        border-collapse: collapse;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
    }

    .user-table th, .user-table td {
        padding: 1rem;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    .user-table th {
        background-color: #1f2937;
        color: #fff;
        font-weight: 600;
        text-transform: uppercase;
    }

    .user-table td {
        background-color: #f9fafb;
    }

    /* Table Action Buttons */
    .user-table td button {
        background-color: #10b981;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 30px;
        cursor: pointer;
        font-weight: 600;
        margin-right: 0.5rem;
        transition: background-color 0.3s ease;
    }

    .user-table td button:hover {
        background-color: #059669;
    }

    .user-table td .delete-btn {
        background-color: #ff6b6b;
    }

    .user-table td .delete-btn:hover {
        background-color: #e05656;
    }

    /* Modal Styling */
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        padding-top: 100px;
    }

    .modal-content {
        background-color: white;
        margin: auto;
        padding: 2rem;
        border-radius: 15px;
        width: 50%;
        box-shadow: 0 5px 30px rgba(0, 0, 0, 0.1);
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover {
        color: black;
        cursor: pointer;
    }

    /* Form Styling */
    form {
        display: grid;
        gap: 1.5rem;
    }

    label {
        font-weight: 500;
        color: #4b5563;
    }

    input[type="text"], input[type="password"], input[type="email"] {
        padding: 1rem;
        border-radius: 8px;
        border: 1px solid #ddd;
        font-size: 1rem;
        background-color: #f9fafb;
    }

    input[type="text"]:focus, input[type="password"]:focus, input[type="email"]:focus {
        border-color: #3b82f6;
        outline: none;
        background-color: #ffffff;
        transition: border-color 0.3s ease;
    }

    button[type="submit"], button[type="button"] {
        background-color: #3b82f6;
        color: white;
        border: none;
        border-radius: 30px;
        padding: 1rem;
        cursor: pointer;
        font-weight: 600;
        text-transform: uppercase;
        transition: background-color 0.3s ease;
    }

    button[type="submit"]:hover, button[type="button"]:hover {
        background-color: #2563eb;
    }

    /* Mobile Responsiveness */
    @media (max-width: 768px) {
        .modal-content {
            width: 90%;
        }

        .dashboard-container {
            padding: 1rem;
            margin: 1rem;
        }

        .table-controls {
            flex-direction: column;
        }

        .table-controls input[type="text"] {
            margin-top: 1rem;
            width: 100%;
        }
    }
</style>

<body>
    <nav class="navbar">
        <h1>Admin Dashboard</h1>
        <button class="logout-btn" onclick="window.location.href='/admin/logout'">Logout</button>
    </nav>

    <main class="dashboard-container">
        <h2>Users Management</h2>
        <div class="table-controls">
            <button onclick="openAddUserModal()">Add User</button>
            <input type="text" id="searchInput" placeholder="Search by email" onkeyup="searchUsers()">
        </div>
        <table class="user-table">
            <thead>
                <tr>
                    <th>No</th>
                    <th>Email</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                {{#each users}}
                <tr>
                    <td>{{@index}}</td>
                    <td>{{this.email}}</td>
                    <td>
                        <button onclick="openEditUserModal('{{this._id}}', '{{this.email}}')">Edit</button>
                        <button class="delete-btn" onclick="deleteUser('{{this._id}}')">Delete</button>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </main>

    <div id="addUserModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeAddUserModal()">&times;</span>
            <h2>Add User</h2>
            <form action="/admin/adduser" method="POST" id="addUserForm">
                <label for="email">Email:</label>
                <input type="text" name="email" id="addUserEmail" required>
                <label for="password">Password:</label>
                <input type="password" name="password" id="addUserPassword" required>
                <button type="submit">Save</button>
                <button type="button" onclick="closeAddUserModal()">Cancel</button>
            </form>
        </div>
    </div>

    <div id="editUserModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditUserModal()">&times;</span>
            <h2>Edit User</h2>
            <form action="/admin/edituser" method="POST" id="editUserForm">
                <input type="hidden" name="id" id="editUserId">
                <label for="email" id="editEmail">Email:</label>
                <input type="text" name="email" id="editUserEmail" required>
                <label for="editPassword">New Password:</label>
                <input type="password" name="password" id="editUserPassword">
                <button type="submit">Save</button>
                <button type="button" onclick="closeEditUserModal()">Cancel</button>
            </form>
        </div>
    </div>

    <script>
        // Function to open the Add User modal
        function openAddUserModal() {
            document.getElementById("addUserModal").style.display = "block";
        }

        // Function to close the Add User modal
        function closeAddUserModal() {
            document.getElementById("addUserModal").style.display = "none";
        }

        // Function to open the Edit User modal
        function openEditUserModal(id, email) {
            document.getElementById("editUserModal").style.display = "block";
            document.getElementById("editUserId").value = id;
            document.getElementById("editUserEmail").value = email;
        }

        // Function to close the Edit User modal
        function closeEditUserModal() {
            document.getElementById("editUserModal").style.display = "none";
        }

        // Function to delete a user
        function deleteUser(userid) {
            if (confirm("Are you sure you want to delete this user?")) {
                window.location.href = `/admin/deleteuser/${userid}`;
            }
        }

        // Function to validate email format
        function validateEmail(email) {
            const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailPattern.test(email);
        }

        // Function to validate password strength
        function validatePassword(password) {
            const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
            return passwordPattern.test(password);
        }

        // Function to handle Add User form submission
        document.getElementById("addUserForm").addEventListener("submit", function (event) {
            event.preventDefault();

            const email = document.getElementById("addUserEmail").value;
            const password = document.getElementById("addUserPassword").value;

            if (!validateEmail(email)) {
                alert("Invalid email address.");
                return;
            }

            if (!validatePassword(password)) {
                alert("Password must be at least 8 characters long and contain a mix of letters, numbers, and special characters.");
                return;
            }

            this.submit();
        });

        // Function to handle Edit User form submission
        document.getElementById("editUserForm").addEventListener("submit", function (event) {
            event.preventDefault();

            const email = document.getElementById("editUserEmail").value;
            const password = document.getElementById("editUserPassword").value;

            if (!validateEmail(email)) {
                alert("Invalid email address.");
                return;
            }

            if (password && !validatePassword(password)) {
                alert("Password must be at least 8 characters long and contain a mix of letters, numbers, and special characters.");
                return;
            }

            this.submit();
        });


        function searchUsers() {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
            table = document.getElementsByClassName("user-table")[0];
            tr = table.getElementsByTagName("tr");

            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[1]; // Assuming email is in the second column
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
    </script>
</body>